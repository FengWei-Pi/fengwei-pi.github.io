@use "scss/colors";

/**
 * Sets background to background-color blended with an opacity adjusted content-rgb.
 */
@mixin background-blend($background-color, $content-rgb, $opacity) {
  background: linear-gradient(
    0,
    rgba($content-rgb, $opacity),
    rgba($content-rgb, $opacity)
  ), $background-color;
}

.container {
  align-items: center;
  border: none;
  border-radius: 24px;
  color: colors.$on-primary;
  cursor: pointer;
  display: inline;
  padding: 8px 16px;
}
.container:focus {
  // Disables possible browser default shadow and outline for focus-visible
  box-shadow: none;
  outline: none;
}

.filled {
  background-color: colors.$primary;
}
.filled:focus {
  border: 2px solid colors.$on-surface;
  box-shadow: inset 0 0 0 2px colors.$surface;
  margin: -2px;
}
.filled:hover {
  @include background-blend(colors.$primary, colors.$on-primary-rgb, colors.$hover-opacity);
}
.filled:active {
  @include background-blend(colors.$primary, colors.$on-primary-rgb, colors.$pressed-opacity);
}

.outline {
  background-color: transparent;
  border: 2px solid colors.$on-surface;
  padding: 6px 14px;
}
.outline:focus {
  box-shadow: 0 0 0 2px colors.$surface, 0 0 0 4px colors.$on-surface;
}

.text {
  background-color: transparent;
}
.text:focus {
  border: 2px solid colors.$on-surface;
  box-shadow: inset 0 0 0 2px colors.$surface;
  margin: -2px;
}

.outline:hover, .text:hover {
  @include background-blend(transparent, colors.$on-primary-rgb, colors.$hover-opacity);
}
.outline:active, .text:active {
  @include background-blend(transparent, colors.$on-primary-rgb, colors.$pressed-opacity);
}
